/*! Class - v0.1.0 - 2013-04-23
* https://lazd.github.com/Class/
* Copyright (c) 2013 Larry Davis; Licensed BSD */
(function(){var t=/xyz/.test(function(){return"xyz"})?/\b_super\b/:{test:function(){return!0}},r=function(t,r,n,s){var e=n[t];return function(){var c=this._super;this._super=s?e:n[t];try{return r.apply(this,arguments)}finally{this._super=c}}},n=function(n,s,e){s=s||this.constructor&&this.constructor.prototype;for(var c in n)if(n.hasOwnProperty(c)&&"construct"!==c&&"destruct"!==c){var u=s&&"function"==typeof n[c]&&"function"==typeof s[c]&&t.test(n[c]);this[c]=u?r(c,n[c],s,e):n[c]}};this.Class=function(t){return t&&t.extend?t.extend.extend(t):Class.extend(t)},this.Class.prototype.mixin=n,Class.extend=function s(t){function r(){var t=Array.prototype.slice.call(arguments);void 0===t[0]&&(t[0]={});var r=Object.create(c);return r.construct&&r.construct.apply(r,t),r.init&&r.init.apply(r,t),r}var e=this.prototype,c=Object.create(e);if(t){if(n.call(c,t,e),Array.isArray(t.mixins))for(var u=0,o=t.mixins.length;o>u;u++)n.call(c,t.mixins[u],c,!0);if(t.construct&&e.construct?c.construct=function(){e.construct.apply(this,arguments),t.construct.apply(this,arguments)}:t.construct&&(c.construct=t.construct),t.destruct&&e.destruct?c.destruct=function(){t.destruct.apply(this,arguments),e.destruct.apply(this,arguments)}:t.destruct&&(c.destruct=t.destruct),"string"==typeof t.toString){var i=t.toString;c.toString=function(){return i}}}return r.prototype=c,r.prototype.constructor=r,r.extend=s,r},"undefined"!=typeof module&&(module.exports=Class)})();